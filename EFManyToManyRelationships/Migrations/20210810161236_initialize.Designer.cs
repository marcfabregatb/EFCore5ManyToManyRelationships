// <auto-generated />
using EFManyToManyRelationships;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EFManyToManyRelationships.Migrations
{
    [DbContext(typeof(DefaultDbContext))]
    [Migration("20210810161236_initialize")]
    partial class initialize
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EFManyToManyRelationships.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Student 1"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Student 2"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Student 3"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Student 4"
                        });
                });

            modelBuilder.Entity("EFManyToManyRelationships.Models.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Teachers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = " teacher 1"
                        },
                        new
                        {
                            Id = 2,
                            Name = " teacher 2"
                        },
                        new
                        {
                            Id = 3,
                            Name = " teacher 3"
                        });
                });

            modelBuilder.Entity("StudentTeacher", b =>
                {
                    b.Property<int>("StudentsId")
                        .HasColumnType("int");

                    b.Property<int>("TeachersId")
                        .HasColumnType("int");

                    b.HasKey("StudentsId", "TeachersId");

                    b.HasIndex("TeachersId");

                    b.ToTable("StudentTeacher");

                    b.HasData(
                        new
                        {
                            StudentsId = 1,
                            TeachersId = 1
                        },
                        new
                        {
                            StudentsId = 2,
                            TeachersId = 1
                        },
                        new
                        {
                            StudentsId = 3,
                            TeachersId = 1
                        },
                        new
                        {
                            StudentsId = 4,
                            TeachersId = 1
                        },
                        new
                        {
                            StudentsId = 2,
                            TeachersId = 2
                        },
                        new
                        {
                            StudentsId = 3,
                            TeachersId = 2
                        },
                        new
                        {
                            StudentsId = 1,
                            TeachersId = 3
                        },
                        new
                        {
                            StudentsId = 4,
                            TeachersId = 3
                        });
                });

            modelBuilder.Entity("StudentTeacher", b =>
                {
                    b.HasOne("EFManyToManyRelationships.Models.Student", null)
                        .WithMany()
                        .HasForeignKey("StudentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EFManyToManyRelationships.Models.Teacher", null)
                        .WithMany()
                        .HasForeignKey("TeachersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
